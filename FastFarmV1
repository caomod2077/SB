--Auto Slap
for i = 1, 1000 do
loadstring(game:HttpGet("https://raw.githubusercontent.com/caomod2077/test-public/refs/heads/main/TestInstant"))()
end




game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(18829.7109, 3042.24097, -228.608887, 0.14886488, 0, -0.988857627, -0, 1.00000012, -0, 0.988857627, 0, 0.14886488)

fireclickdetector(game.Workspace.Lobby["el gato"].ClickDetector)

game:GetService("ReplicatedStorage").Events.Cat:FireServer()

wait(0,10)

game:GetService("ReplicatedStorage").GeneralAbility:FireServer()

wait(0,4)

fireclickdetector(game.Workspace.Lobby["Replica"].ClickDetector)

game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.Lobby.Teleport2.CFrame

wait(1,5)

game:GetService("ReplicatedStorage").Duplicate:FireServer()

if not game:IsLoaded() then
    game.Loaded:Wait()
end

local SeverHOPSet = { 
    ErrorReply = "rejoin",
    SwitchServerType = "serverhop"
}

local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer

local function RJ()
    task.spawn(function()
        local httprequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
        
        if not httprequest then 
            localPlayer:Kick("Your executor cannot run rejoin script") 
        end
        
        local servers = {}
        local req = httprequest({
            Url = string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true", game.PlaceId)
        })
        
        local body = game:GetService("HttpService"):JSONDecode(req.Body)
        
        if body and body.data then
            for _, v in next, body.data do
                if SeverHOPSet.SwitchServerType:lower() == "serverhop" then
                    if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) 
                       and v.playing < v.maxPlayers and v.id ~= game.JobId then
                        table.insert(servers, 1, v.id)
                    end
                else
                    if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) 
                       and v.playing < v.maxPlayers and v.id == game.JobId then
                        table.insert(servers, 1, v.id)
                    end
                end
            end
        end
        
        if #servers > 0 then
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)], localPlayer)
            wait(3)
            if localPlayer then 
                game:GetService("TeleportService"):Teleport(game.PlaceId) 
                wait(4)
                if localPlayer then
                    localPlayer:Kick("Error")
                end
            end 
        else
            if SeverHOPSet.ErrorReply:lower() == "kick" then 
                localPlayer:Kick("No server found") 
            else 
                game:GetService("TeleportService"):Teleport(game.PlaceId) 
            end
        end
    end)
end

RJ()
